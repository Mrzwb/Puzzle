{"version":3,"sources":["default.jpg","constants/ActionTypes.js","util/ArrUtils.js","reducers/puzzleReducer.js","reducers/clockReducer.js","reducers/stepsReducer.js","reducers/index.js","containers/Clock.js","components/Controller.js","actions/puzzleAction.js","actions/clockAction.js","actions/stepsAction.js","containers/Controller.js","components/FileChooser.js","util/ImgUtils.js","containers/FileChooser.js","components/ModeChooser.js","containers/ModeChooser.js","components/Puzzle.js","containers/Puzzle.js","containers/Steps.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PUZZLE_LOAD_IMG","PUZZLE_CHANGE_SIZE","PUZZLE_START","PUZZLE_RESET","CLOCK_START","CLOCK_STOP","CLOCK_PAUSE","STEPS_SHOW","STEPS_COUNT","isEqual","formArr","toArry","i","length","randomArr","count","arr","push","j","swapNum","fromRandom","Math","floor","random","toRandom","temp","initialState","picture","require","size","startArr","resetToggle","displayStatus","pauseStatus","steps","rootReducer","combineReducers","puzzleReducer","state","action","type","types","pow","clockReducer","stepsReducer","isShow","display","currentSteps","Clock","props","hour","minute","second","this","clearInterval","timerID","setState","setInterval","tick","clear","prevProps","start","stop","pause","Component","connect","Controller","onStart","onReset","onSteps","className","onClick","data","dispatch","ownProps","event","PuzzleActions","ClockActions","StepsActions","FileChooser","choosePicture","id","accept","capture","onChange","htmlFor","draggable","src","logo","alt","createCanvas","width","height","canvas","document","createElement","images","querySelectorAll","Promise","resolve","reject","file","target","files","window","FileReader","url","webkitURL","createObjectURL","reader","readAsDataURL","onloadend","e","result","chooseImg","then","forEach","img","modes","ModeChooser","chooseMode","map","mode","index","key","name","defaultChecked","onKeyDown","preventDefault","Puzzle","pieces","origin","handleKeyDown","bind","addEventListener","clipImg","removeEventListener","prevState","snapshot","displaySteps","isStarting","reset","_this","Image","crossOrigin","onload","naturalWidth","naturalHeight","ctx","getContext","drawImage","block","blockCtx","bw","bh","clipData","getImageData","putImageData","x","y","toDataURL","onerror","Error","clipImage","newPieces","keyCode","which","moveLeft","moveUp","moveRight","moveDown","countSteps","isWinner","alert","stopClock","emptyBlock","find","moveBlock","swapBlock","slice","location","success","piece","style","transform","WebkitTransform","zIndex","store","createStore","reducers","App","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82501c9e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.ef2b6dff.jpg\";","\r\nexport const PUZZLE_LOAD_IMG = 'LOAD_IMG';\r\nexport const PUZZLE_CHANGE_SIZE = 'CHANGE_SIZE';\r\nexport const PUZZLE_START = 'START';\r\nexport const PUZZLE_RESET = 'RESET';\r\n\r\nexport const CLOCK_START = 'CLOCK_START';\r\nexport const CLOCK_STOP = 'CLOCK_STOP';\r\nexport const CLOCK_PAUSE = 'CLOCK_PAUSE';\r\n\r\nexport const STEPS_SHOW = 'STEPS_SHOW';\r\nexport const STEPS_COUNT = 'STEPS_COUNT';","/**\r\n * 判断是否同一数组\r\n * @param formArr\r\n * @param toArry\r\n * @returns {boolean}\r\n */\r\nexport const isEqual = (formArr, toArry) => {\r\n    for (let i in formArr) {\r\n        if (formArr[i] !== toArry[i]) {\r\n            return false\r\n        }\r\n    }\r\n    return formArr.length === toArry.length;\r\n}\r\n\r\n/**\r\n * 判断是否不同数组\r\n * @param formArr\r\n * @param toArry\r\n * @returns {boolean}\r\n */\r\nexport const isNotEqual = (formArr, toArry) => {\r\n    return !isEqual(formArr, toArry);\r\n}\r\n\r\n/**\r\n * 随机数组\r\n * <p>\r\n *  初始逆序为0, 随机交互的次数为偶数次， 则可还原\r\n * </p>\r\n * @param count\r\n * @returns {Array}\r\n */\r\nexport const randomArr = (count) => {\r\n    let arr = [];\r\n    for (let i =1 ;i <count; i++) {\r\n        arr.push(i);\r\n    }\r\n\r\n    let j = 1;\r\n    let swapNum = count;\r\n    swapNum = (count & 1) === 0 ? swapNum+1 : count;\r\n    while(j < swapNum ) {\r\n        let fromRandom = Math.floor(Math.random() * (count-1));\r\n        let toRandom = Math.floor(Math.random() * (count-1));\r\n        if (fromRandom !== toRandom) {\r\n            let temp = arr[fromRandom] ;\r\n            arr[fromRandom] = arr[toRandom];\r\n            arr[toRandom] = temp;\r\n            j++;\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n","import * as types from '../constants/ActionTypes';\r\nimport { randomArr } from '../util/ArrUtils'\r\n\r\nconst defaultPicture = require('../default.jpg');\r\n\r\nconst initialState = {\r\n    picture: defaultPicture,\r\n    size: 3,\r\n    startArr: [],\r\n    resetToggle: 0  // 复位开关\r\n}\r\n\r\nexport default function puzzleReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.PUZZLE_LOAD_IMG:\r\n            return {\r\n                ...state,\r\n                picture: action.picture,\r\n            }\r\n        case types.PUZZLE_CHANGE_SIZE:\r\n            return {\r\n                ...state,\r\n                size: action.size,\r\n            }\r\n        case types.PUZZLE_START:\r\n            const { size } = state;\r\n            let startArr = randomArr(Math.pow(size,2));\r\n            return {\r\n                ...state,\r\n               startArr: startArr,\r\n            }\r\n        case types.PUZZLE_RESET:\r\n            const { resetToggle } = state;\r\n            return {\r\n                ...state,\r\n                startArr: [],\r\n                resetToggle: ~resetToggle,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import * as types from '../constants/ActionTypes';\r\n\r\nconst initialState = {\r\n    displayStatus: false,\r\n    pauseStatus: false,\r\n}\r\n\r\nexport default function clockReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case types.CLOCK_START:\r\n            return {\r\n                ...state,\r\n                displayStatus: true\r\n            }\r\n        case types.CLOCK_STOP:\r\n            return {\r\n                ...state,\r\n                displayStatus: false\r\n            }\r\n        case types.CLOCK_PAUSE:\r\n            const { pauseStatus } = state;\r\n            return {\r\n                ...state,\r\n                pauseStatus: !pauseStatus\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import * as types from '../constants/ActionTypes';\r\n\r\nconst initialState = {\r\n    displayStatus: false,\r\n    steps: 0,\r\n}\r\n\r\nexport default function stepsReducer(state = initialState, action) {\r\n    const {displayStatus, steps } = state;\r\n    switch (action.type) {\r\n        case types.STEPS_SHOW:\r\n            const { isShow } = action;\r\n            let display = typeof(isShow) === 'undefined' ? !displayStatus :isShow;\r\n            let currentSteps = display ? steps : 0 ;\r\n            return {\r\n                ...state,\r\n                displayStatus: display,\r\n                steps: currentSteps,\r\n            }\r\n        case types.STEPS_COUNT:\r\n            let count = steps;\r\n            count = state.displayStatus ? ++count : 0;\r\n            return {\r\n                ...state,\r\n                steps: count,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport puzzleReducer from './puzzleReducer';\r\nimport clockReducer from './clockReducer';\r\nimport stepsReducer from './stepsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    puzzleReducer,\r\n    clockReducer,\r\n    stepsReducer,\r\n})\r\n\r\nexport default rootReducer\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Clock extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hour: 0,\r\n            minute: 0,\r\n            second: 0,\r\n        };\r\n    }\r\n\r\n    tick() {\r\n        let {hour, minute, second } = this.state;\r\n        second++;\r\n        if (second > 59) {\r\n            minute++;\r\n            second = 0;\r\n        }\r\n        if ( minute > 59) {\r\n            hour++;\r\n            minute = 0;\r\n        }\r\n        if(hour> 24) {\r\n            clearInterval(this.timerID);\r\n        }\r\n        this.setState({\r\n            hour: hour,\r\n            minute: minute,\r\n            second: second\r\n        });\r\n    }\r\n\r\n    start() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.timerID);\r\n        this.clear();\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            hour: 0,\r\n            minute: 0,\r\n            second: 0,\r\n        });\r\n    }\r\n\r\n    pause() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    componentDidUnMount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { displayStatus, pauseStatus } = this.props;\r\n        if (prevProps.displayStatus !== displayStatus) {\r\n            if (displayStatus) {\r\n                this.start();\r\n            } else {\r\n                this.stop();\r\n            }\r\n        }\r\n\r\n        if (prevProps.pauseStatus !== pauseStatus) {\r\n            this.pause();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {hour, minute, second } = this.state;\r\n        const { displayStatus } = this.props;\r\n        return (\r\n            <div>\r\n                {displayStatus ?\r\n                    <h2>{hour>9? hour:`0${hour}`}\r\n                        :{minute>9? minute:`0${minute}`}\r\n                        :{second>9?second:`0${second}`}</h2>: ''\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    displayStatus: state.clockReducer.displayStatus,\r\n    pauseStatus: state.clockReducer.pauseStatus,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Clock);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Controller.css';\r\nimport { Clock } from '../containers';\r\n\r\nconst Controller = ({onStart, onReset, onSteps}) => (\r\n    <div className=\"controller\">\r\n        <button onClick={onStart}> 开始 </button>\r\n        <button onClick={onReset}> 重置 </button>\r\n       {/* <button onClick={onSteps}> 步数 </button>*/}\r\n        <button > 自动 </button>\r\n        <Clock/>\r\n    </div>\r\n)\r\n\r\nController.propTypes = {\r\n    onStart: PropTypes.func.isRequired,\r\n    onReset: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Controller;","import * as types from '../constants/ActionTypes'\r\n\r\n/**\r\n * 选择图片\r\n * @param data\r\n * @returns {{type, picture: *}}\r\n */\r\nexport const loadImg = data => ({ type: types.PUZZLE_LOAD_IMG, picture: data });\r\n\r\n/**\r\n * 变更模式\r\n * @param size\r\n * @returns {{type, size: *}}\r\n */\r\nexport const changeSize = size => ({ type: types.PUZZLE_CHANGE_SIZE, size: size });\r\n\r\n/**\r\n * 开始\r\n * @returns {{type}}\r\n */\r\nexport const onStart = () =>  ({ type: types.PUZZLE_START});\r\n\r\n/**\r\n * 重置\r\n * @returns {{type}}\r\n */\r\nexport const onReset = () => ({ type: types.PUZZLE_RESET})\r\n\r\nexport default {\r\n    loadImg,\r\n    changeSize,\r\n    onStart,\r\n    onReset,\r\n}","import * as types from \"../constants/ActionTypes\";\r\n\r\nexport const start = () => ({ type: types.CLOCK_START });\r\n\r\nexport const stop = () => ({ type: types.CLOCK_STOP });\r\n\r\nexport const pause = () => ({ type: types.CLOCK_PAUSE });\r\n\r\nexport default {\r\n    start,\r\n    stop,\r\n    pause,\r\n}","import * as types from \"../constants/ActionTypes\";\r\n\r\nexport const show = (isShow) => ({ type: types.STEPS_SHOW , isShow: isShow});\r\n\r\nexport const count = () => ({ type: types.STEPS_COUNT });\r\n\r\nexport default {\r\n    show,\r\n    count,\r\n}","import { connect } from 'react-redux'\r\nimport Controller from '../components/Controller';\r\nimport { PuzzleActions, ClockActions, StepsActions } from \"../actions\";\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onStart: event => {\r\n        dispatch(PuzzleActions.onStart());\r\n        dispatch(ClockActions.start());\r\n        dispatch(StepsActions.show(true));\r\n    },\r\n\r\n    onReset: event => {\r\n        dispatch(PuzzleActions.onReset());\r\n        dispatch(ClockActions.stop());\r\n        dispatch(StepsActions.show(false));\r\n    },\r\n\r\n    onSteps: event => {\r\n        dispatch(StepsActions.show());\r\n    },\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Controller);","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport logo from '../default.jpg';\r\nimport './FileChooser.css'\r\n\r\nconst FileChooser = ({choosePicture}) => (\r\n    <Fragment>\r\n        <div className=\"chooser-file\">\r\n            <input id=\"input-file\" type='file' accept=\"image/*\" capture=\"camera\" onChange={choosePicture}/>\r\n            <label htmlFor=\"input-file\" >选择图片</label>\r\n        </div>\r\n        <p>\r\n            <img id=\"show-img\" draggable=\"true\" src={logo} className=\"chooser-preview\" alt=\"preview\"/>\r\n        </p>\r\n    </Fragment>\r\n);\r\n\r\nFileChooser.propTypes = {\r\n    choosePicture: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FileChooser;\r\n","\r\nconst createCanvas = (width, height) => {\r\n    const canvas = document.createElement('CANVAS');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    return canvas;\r\n}\r\n\r\n/**\r\n * 图片剪切\r\n * @param data  The address or URL of the a media resource that is to be considered.\r\n * @param size  分割的模块 默认 3 x 3\r\n * @returns {Promise<any>}\r\n */\r\nexport const clipImage = (data, size = 3) => new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    img.crossOrigin = 'Anonymous';\r\n    img.src = data;\r\n    img.onload = function(){\r\n        let canvas = createCanvas( this.naturalWidth, this.naturalHeight);\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.drawImage(this,0,0);\r\n\r\n        let block =  createCanvas( this.naturalWidth/size, this.naturalHeight/size);\r\n        const blockCtx = block.getContext('2d');\r\n        const bw = block.width;\r\n        const bh = block.height;\r\n\r\n        let pieces = [];\r\n        for (let i = 0; i < size; i++) {\r\n            for (let j = 0; j < size; j++) {\r\n                const clipData = ctx.getImageData(j*bw, i*bh, bw, bh);\r\n                blockCtx.putImageData(clipData,0,0);\r\n                pieces.push({\r\n                    id: i*size + j + 1,\r\n                    x: j,\r\n                    y: i,\r\n                    data: block.toDataURL(),\r\n                });\r\n            }\r\n        }\r\n        canvas = null;\r\n        block = null;\r\n        return resolve(pieces);\r\n    };\r\n\r\n    img.onerror = function() {\r\n        reject(new Error('could not load image!'));\r\n    };\r\n});\r\n\r\n/**\r\n * 图片选择\r\n * @param event\r\n * @returns {Promise<any>}\r\n */\r\nexport const chooseImg = event =>  new Promise((resolve, reject) => {\r\n    const file = event.target.files[0];\r\n    if (window.FileReader) {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = function (e) {\r\n            return resolve(e.target.result);\r\n        };\r\n    } else {\r\n        const url = window.url || window.webkitURL;\r\n        const data = url.createObjectURL(file);\r\n        return resolve(data);\r\n    }\r\n});","import { connect } from 'react-redux';\r\nimport FileChooser from '../components/FileChooser';\r\nimport {ClockActions, PuzzleActions, StepsActions} from '../actions';\r\nimport { chooseImg } from '../util/ImgUtils';\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    choosePicture: (event) => {\r\n        let images = document.querySelectorAll(\"#show-img\");\r\n        chooseImg(event).then( data => {\r\n            images.forEach(img => img.src = data );\r\n            dispatch(PuzzleActions.loadImg(data));\r\n            dispatch(ClockActions.stop());\r\n            dispatch(StepsActions.show(false));\r\n        });\r\n    }\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(FileChooser);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modes = ['简单', '中等','困难'];\r\n\r\nconst ModeChooser = ({chooseMode}) => {\r\n    return (\r\n        <Fragment>\r\n        {\r\n            modes.map( (mode, index) =>\r\n                <label htmlFor={`M${index}`} key={index}>{ mode }\r\n                    <input id= {index}\r\n                           type=\"radio\"\r\n                           name=\"modeRadios\"\r\n                           defaultChecked={ index === 0 ? true : false }\r\n                           onKeyDown={e=>e.preventDefault()}\r\n                           onChange={chooseMode}/>\r\n                </label>\r\n            )\r\n        }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nModeChooser.propTypes = {\r\n    chooseMode: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ModeChooser;","import { connect } from 'react-redux';\r\nimport ModeChooser from '../components/ModeChooser';\r\nimport { PuzzleActions, ClockActions } from '../actions';\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    chooseMode: (event) => {\r\n        let id = event.target.id;\r\n        let size = id === '1' ? 6 : (id === '2' ? 9 : 3);\r\n        dispatch(PuzzleActions.changeSize(size));\r\n        dispatch(ClockActions.stop());\r\n    }\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ModeChooser);","import React, { Component, Fragment } from 'react';\r\nimport { clipImage } from '../util/ImgUtils';\r\nimport {isEqual, isNotEqual} from '../util/ArrUtils';\r\nimport PropTypes from 'prop-types';\r\nimport './Puzzle.css';\r\n\r\nclass Puzzle extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pieces: [],\r\n            count: 0,\r\n            origin: [],\r\n        }\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n        this.clipImg();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.picture !== this.props.picture || prevProps.size !== this.props.size) {\r\n            this.clipImg();\r\n            this.props.displaySteps();\r\n        }\r\n        if (isNotEqual(prevProps.startArr, this.props.startArr) && this.isStarting()) {\r\n            this.start();\r\n        }\r\n        if (prevProps.resetToggle !== this.props.resetToggle ) {\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    clipImg() {\r\n        const _this = this;\r\n        const { picture , size } = this.props;\r\n        clipImage( picture, size).then( pieces => {\r\n            const  arr = [];\r\n            pieces.forEach( block => arr.push([block.x, block.y]));\r\n            _this.setState({\r\n                pieces: pieces,\r\n                count: Math.pow(size,2),\r\n                origin: arr,\r\n            })\r\n        });\r\n    }\r\n\r\n    handleKeyDown(event) {\r\n        const { pieces, count } = this.state;\r\n        let newPieces = pieces;\r\n        const key = window.event ? event.keyCode : event.which;\r\n        switch(key) {\r\n            case 37:\r\n                newPieces = this.moveLeft(pieces, count);\r\n                break;\r\n            case 38:\r\n                newPieces = this.moveUp(pieces, count);\r\n                break;\r\n            case 39:\r\n                newPieces = this.moveRight(pieces, count);\r\n                break;\r\n            case 40:\r\n                newPieces = this.moveDown(pieces, count);\r\n                break;\r\n            default:\r\n        }\r\n\r\n        if (newPieces !== pieces) {\r\n            this.setState({\r\n                pieces: newPieces,\r\n            });\r\n\r\n            this.props.countSteps();\r\n\r\n            if (this.isWinner() && this.isStarting()) {\r\n                alert('YOU WIN!');\r\n                this.props.stopClock();\r\n            }\r\n        }\r\n    }\r\n\r\n    moveRight(pieces, count) {\r\n        let emptyBlock = pieces.find( block => block.id === count);\r\n        let moveBlock = pieces.find( block => block.y === emptyBlock.y && block.x === emptyBlock.x - 1);\r\n        if (moveBlock) {\r\n            this.swapBlock(moveBlock, emptyBlock);\r\n            return pieces.slice();\r\n        }\r\n        return pieces;\r\n    }\r\n\r\n    moveLeft(pieces, count) {\r\n        let emptyBlock = pieces.find( block => block.id === count);\r\n        let moveBlock = pieces.find( block => block.y === emptyBlock.y && block.x === emptyBlock.x + 1);\r\n        if (moveBlock) {\r\n            this.swapBlock(moveBlock, emptyBlock);\r\n            pieces = pieces.slice();\r\n        }\r\n        return pieces;\r\n    }\r\n\r\n    moveUp(pieces, count) {\r\n        let emptyBlock = pieces.find( block => block.id === count);\r\n        let moveBlock = pieces.find( block => block.x === emptyBlock.x && block.y === emptyBlock.y + 1);\r\n        if (moveBlock) {\r\n            this.swapBlock(moveBlock, emptyBlock);\r\n            pieces = pieces.slice();\r\n        }\r\n        return pieces;\r\n    }\r\n\r\n    moveDown(pieces, count) {\r\n        let emptyBlock = pieces.find( block => block.id === count);\r\n        let moveBlock = pieces.find( block => block.x === emptyBlock.x && block.y === emptyBlock.y - 1);\r\n        if (moveBlock) {\r\n            this.swapBlock(moveBlock, emptyBlock);\r\n            pieces = pieces.slice();\r\n        }\r\n        return pieces;\r\n    }\r\n\r\n    swapBlock(moveBlock, emptyBlock) {\r\n        moveBlock.x ^= emptyBlock.x;\r\n        emptyBlock.x ^= moveBlock.x;\r\n        moveBlock.x ^= emptyBlock.x\r\n\r\n        moveBlock.y ^= emptyBlock.y;\r\n        emptyBlock.y ^= moveBlock.y;\r\n        moveBlock.y ^= emptyBlock.y;\r\n    }\r\n\r\n    isStarting() {\r\n        return !isEqual([],this.props.startArr);\r\n    }\r\n\r\n    /**\r\n     * 打乱\r\n     */\r\n    start() {\r\n        this.reset();\r\n        const { pieces, origin } = this.state;\r\n        const { startArr } = this.props;\r\n        for (let i =0; i< pieces.length-1; i++) {\r\n            let location = origin[startArr[i]-1];\r\n            pieces[i].x = location[0];\r\n            pieces[i].y = location[1];\r\n        }\r\n        this.setState({\r\n            pieces: pieces,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset() {\r\n        const { pieces, origin } = this.state;\r\n        pieces.forEach( (block, index) => {\r\n            block.x = origin[index][0];\r\n            block.y = origin[index][1];\r\n        });\r\n        this.setState({\r\n            pieces: pieces,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获胜\r\n     */\r\n    isWinner() {\r\n        const { pieces, origin } = this.state;\r\n        let success = true;\r\n        pieces.forEach( (block, index) => {\r\n            if(block.x !== origin[index][0] || block.y !== origin[index][1]) {\r\n                success = false;\r\n            }\r\n        });\r\n        return success;\r\n    }\r\n\r\n    render() {\r\n        const { pieces, count } = this.state;\r\n        const { size } = this.props;\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    pieces.map((piece, i) => piece.id !== count ?\r\n                        <div id={ `img-${piece.id}` }\r\n                             key={ piece.id }\r\n                             className=\"puzzle-div\"\r\n                             style={{\r\n                                width: `${100/size}%`,\r\n                                height: `${100/size}%`,\r\n                                transform: `translate3d(${piece.x*100}%, ${piece.y*100}%, 0)`,\r\n                                WebkitTransform: `translate3d(${piece.x*100 }%, ${piece.y *100}%, 0)`,\r\n                        }}>\r\n                        <img draggable=\"true\"\r\n                             src={ piece.data }\r\n                             className=\"puzzle-img\"\r\n                             alt=\"showImg\"\r\n                             style = {{\r\n                                 zIndex: pieces.length - i,\r\n                             }}\r\n                        />\r\n                        </div> : null\r\n                    )\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nPuzzle.propTypes = {\r\n    picture: PropTypes.string.isRequired,\r\n    size:  PropTypes.number.isRequired,\r\n    countSteps: PropTypes.func,\r\n    displaySteps: PropTypes.func,\r\n\r\n}\r\n\r\nexport default Puzzle;","import { connect } from 'react-redux';\r\nimport Puzzle from '../components/Puzzle';\r\nimport { ClockActions ,StepsActions } from \"../actions\";\r\n\r\nconst mapStateToProps = state => ({\r\n    picture: state.puzzleReducer.picture,\r\n    size:  state.puzzleReducer.size,\r\n    startArr: state.puzzleReducer.startArr,\r\n    resetToggle: state.puzzleReducer.resetToggle,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    countSteps: () => {\r\n        dispatch(StepsActions.count());\r\n    },\r\n\r\n    displaySteps: () => {\r\n        dispatch(StepsActions.show(false));\r\n    },\r\n\r\n    stopClock: () => {\r\n        dispatch(ClockActions.pause());\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Puzzle);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Steps = ({displayStatus, steps}) => {\r\n    return (\r\n        <>\r\n        {\r\n            displayStatus? <p>步数: {steps}</p> : null\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    displayStatus: state.stepsReducer.displayStatus,\r\n    steps: state.stepsReducer.steps,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Steps);","import React from 'react';\nimport './App.css';\nimport  { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducers from './reducers';\nimport {\n    Puzzle,\n    FileChooser,\n    ModeChooser,\n    Controller,\n    Steps,\n} from './containers';\n\nconst store = createStore(reducers);\n\nconst App = () => (\n  <Provider store = { store }>\n      <article className = \"App\">\n          <section>\n              <Puzzle/>\n          </section>\n          <aside>\n              <FileChooser/>\n              <ModeChooser/>\n              <p/>\n              <Controller/>\n              <Steps/>\n          </aside>\n      </article>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}